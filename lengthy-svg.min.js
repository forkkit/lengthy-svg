!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.Lengthy=e()}(this,function(){"use strict";function t(t){return o(t).map(function(t,e){var n=r(t);return t.classList.add("lengthy"),t.style.setProperty("--path-length",n),{el:t,length:n}})}function e(t){return t.baseVal?t.baseVal.value||t.baseVal:t}function n(t,e,n,r){var o=t-n,i=e-r;return Math.sqrt(o*o+i*i)}function r(t){if(!t)return!1;if(t.getTotalLength)return t.getTotalLength();if(t instanceof SVGUseElement)return r(document.querySelector(e(t.href)));if(t.width)return 2*e(t.width)+2*e(t.height);if(t.x1)return n(e(t.x1),e(t.y1),e(t.x2),e(t.y2));if(t.r)return 2*Math.PI*e(t.r);if(t.rx&&t.ry){var o=e(t.rx),i=e(t.ry);return Math.PI*(3*(o+i)-Math.sqrt((3*o+i)*(o+3*i)))}if(t.points){for(var u=t.getAttribute("points").split(/[\s,]+/),a=0,f=0,l=u.length-2;f<l;f+=2)a+=n(u[f],u[f+1],u[f+2],u[f+3]);return t instanceof SVGPolygonElement&&(a+=n(u[f],u[f+1],u[0],u[1])),a}return!1}function o(t,e){return Array.prototype.slice.call(t.nodeName?[t]:t[0].nodeName?t:document.querySelectorAll(t),0)}return t.getLength=r,t.$=o,t});